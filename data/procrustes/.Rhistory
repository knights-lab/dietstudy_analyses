geom_point(aes(color = variable), size = 3) +
geom_point(shape = 1, size =3, color = "black") +
scale_color_manual(values = c("#a6dba0", "#7b3294"), labels=c("1 day","3 day")) +
#scale_color_manual(values = brewer.pal(5, "Dark2")) +
geom_hline(yintercept = log(0.05), linetype = 2, color = "darkgrey") +
theme_bw() +
theme(axis.text.x = element_text(size = 4),
legend.position = c(0.88,0.13),
legend.title = element_blank())+
xlab(label = "Subject") +
ylab(label = "log(Monte Carlo p-value)") +
annotate("text", label = "p = 0.05", size = 3, x = 29, y = log(0.04))
plot <- plot[order(plot$`day3Monte Carlo p-value`),]     # reorder by variable of choice
plot$UserName <- factor(plot$UserName, levels = plot$UserName)
plot_new <- plot %>% select(UserName,
`day1Monte Carlo p-value`,
`day3Monte Carlo p-value`)
plot_melt <- melt(plot_new)
plot_melt <- na.omit(plot_melt)
# Make scatterplot of best v. 1 day, ordered by best
ggplot(plot_melt, aes(x = UserName, y = log(value), group = variable)) +
geom_point(aes(color = variable), size = 3) +
geom_point(shape = 1, size =3, color = "black") +
scale_color_manual(values = c("#a6dba0", "#7b3294"), labels=c("1 day","3 day")) +
#scale_color_manual(values = brewer.pal(5, "Dark2")) +
geom_hline(yintercept = log(0.05), linetype = 2, color = "darkgrey") +
theme_bw() +
theme(axis.text.x = element_text(size = 4),
legend.position = c(0.88,0.13),
legend.title = element_blank())+
xlab(label = "Subject") +
ylab(label = "log(Monte Carlo p-value)") +
annotate("text", label = "p = 0.05", size = 3, x = 29, y = log(0.04))
plot <- plot[order(plot$`day2Monte Carlo p-value`),]     # reorder by variable of choice
plot$UserName <- factor(plot$UserName, levels = plot$UserName)
plot_new <- plot %>% select(UserName,
`day1Monte Carlo p-value`,
`day2Monte Carlo p-value`)
plot_melt <- melt(plot_new)
plot_melt <- na.omit(plot_melt)
# Make scatterplot of best v. 1 day, ordered by best
ggplot(plot_melt, aes(x = UserName, y = log(value), group = variable)) +
geom_point(aes(color = variable), size = 3) +
geom_point(shape = 1, size =3, color = "black") +
scale_color_manual(values = c("#a6dba0", "#7b3294"), labels=c("1 day","3 day")) +
#scale_color_manual(values = brewer.pal(5, "Dark2")) +
geom_hline(yintercept = log(0.05), linetype = 2, color = "darkgrey") +
theme_bw() +
theme(axis.text.x = element_text(size = 4),
legend.position = c(0.88,0.13),
legend.title = element_blank())+
xlab(label = "Subject") +
ylab(label = "log(Monte Carlo p-value)") +
annotate("text", label = "p = 0.05", size = 3, x = 29, y = log(0.04))
plot <- plot[order(plot$`day3Monte Carlo p-value`),]     # reorder by variable of choice
plot$UserName <- factor(plot$UserName, levels = plot$UserName)
plot_new <- plot %>% select(UserName,
`day1Monte Carlo p-value`,
`day3Monte Carlo p-value`)
plot_melt <- melt(plot_new)
plot_melt <- na.omit(plot_melt)
# Make scatterplot of best v. 1 day, ordered by best
ggplot(plot_melt, aes(x = UserName, y = log(value), group = variable)) +
geom_point(aes(color = variable), size = 3) +
geom_point(shape = 1, size =3, color = "black") +
scale_color_manual(values = c("#a6dba0", "#7b3294"), labels=c("1 day","3 day")) +
#scale_color_manual(values = brewer.pal(5, "Dark2")) +
geom_hline(yintercept = log(0.05), linetype = 2, color = "darkgrey") +
theme_bw() +
theme(axis.text.x = element_text(size = 4),
legend.position = c(0.88,0.13),
legend.title = element_blank())+
xlab(label = "Subject") +
ylab(label = "log(Monte Carlo p-value)") +
annotate("text", label = "p = 0.05", size = 3, x = 29, y = log(0.04))
map_username <- map_username[!map_username$UserName == c("MCTs06", "MCTs25")]
day1 <- read.table("figures/figure 4/procrustes/results_username_clr_1day/totals.txt", comment = "#", header = F, sep = "\t")
colnames(day1) <- c("FP1","FP2","Num included dimensions", "day1Monte Carlo p-value", "Count better", "M^2")
day1$UserName <- gsub("\\_.*", "", day1$FP1)
day1 <- day1 %>% select(UserName, `day1Monte Carlo p-value`)
map_username <- full_join(map_username, day1)
day2 <- read.table("figures/figure 4/procrustes/results_username_clr_2day/totals.txt", comment = "#", header = F, sep = "\t")
colnames(day2) <- c("FP1","FP2","Num included dimensions", "day2Monte Carlo p-value", "Count better", "M^2")
day2$UserName <- gsub("\\_.*", "", day2$FP1)
day2 <- day2 %>% select(UserName, `day2Monte Carlo p-value`)
map_username <- full_join(map_username, day2)
day3 <- read.table("figures/figure 4/procrustes/results_username_clr_3day/totals.txt", comment = "#", header = F, sep = "\t")
colnames(day3) <- c("FP1","FP2","Num included dimensions", "day3Monte Carlo p-value", "Count better", "M^2")
day3$UserName <- gsub("\\_.*", "", day3$FP1)
day3 <- day3 %>% select(UserName, `day3Monte Carlo p-value`)
day3$`day3Monte Carlo p-value` <- ifelse(day3$`day3Monte Carlo p-value` == 1, NA, day3$`day3Monte Carlo p-value`)
map_username <- full_join(map_username, day3)
day4 <- read.table("figures/figure 4/procrustes/results_username_clr_4day/totals.txt", comment = "#", header = F, sep = "\t")
colnames(day4) <- c("FP1","FP2","Num included dimensions", "day4Monte Carlo p-value", "Count better", "M^2")
day4$UserName <- gsub("\\_.*", "", day4$FP1)
day4 <- day4 %>% select(UserName, `day4Monte Carlo p-value`)
day4$`day4Monte Carlo p-value` <- ifelse(day4$`day4Monte Carlo p-value` == 1, NA, day4$`day4Monte Carlo p-value`)
map_username <- full_join(map_username, day4)
day5 <- read.table("figures/figure 4/procrustes/results_username_clr_5day/totals.txt", comment = "#", header = F, sep = "\t")
colnames(day5) <- c("FP1","FP2","Num included dimensions", "day5Monte Carlo p-value", "Count better", "M^2")
day5$UserName <- gsub("\\_.*", "", day5$FP1)
day5 <- day5 %>% select(UserName, `day5Monte Carlo p-value`)
day5$`day5Monte Carlo p-value` <- ifelse(day5$`day5Monte Carlo p-value` == 1, NA, day5$`day5Monte Carlo p-value`)
map_username <- full_join(map_username, day5)
map_username <- map_username[!map_username$Study.Status == "Dropped",]
map_username <- map_username[!map_username$UserName == c("MCTs06", "MCTs25")]
sum(map_username$`day1Monte Carlo p-value`<=0.05, na.rm = T)
sum(map_username$`day2Monte Carlo p-value`<=0.05, na.rm = T)
sum(map_username$`day3Monte Carlo p-value`<=0.05, na.rm = T)
sum(map_username$`day4Monte Carlo p-value`<=0.05, na.rm = T)
sum(map_username$`day5Monte Carlo p-value`<=0.05, na.rm = T)
sum(is.na(map_username$`day1Monte Carlo p-value`<=0.05))
sum(is.na(map_username$`day2Monte Carlo p-value`<=0.05))
sum(is.na(map_username$`day3Monte Carlo p-value`<=0.05))
sum(is.na(map_username$`day4Monte Carlo p-value`<=0.05))
sum(is.na(map_username$`day5Monte Carlo p-value`<=0.05))
mean(map_username$`day1Monte Carlo p-value`, na.rm = T)
mean(map_username$`day2Monte Carlo p-value`, na.rm = T)
mean(map_username$`day3Monte Carlo p-value`, na.rm = T)
mean(map_username$`day4Monte Carlo p-value`, na.rm = T)
mean(map_username$`day5Monte Carlo p-value`, na.rm = T)
plot <- map_username
colnames(plot)[1] <- "UserName"
plot$UserName <- gsub("MCTs", "", plot$UserName)         # remove MCTs from naming
plot <- plot[order(plot$`day4Monte Carlo p-value`),]     # reorder by variable of choice
plot$UserName <- factor(plot$UserName, levels = plot$UserName)
plot <- plot %>% select(UserName,
`day1Monte Carlo p-value`,
`day2Monte Carlo p-value`,
`day3Monte Carlo p-value`,
`day4Monte Carlo p-value`,
`day5Monte Carlo p-value`)
plot_melt <- melt(plot)
plot_melt <- na.omit(plot_melt)
cols <- brewer.pal(8, "Accent")
cols2 <- colorRampPalette(cols)
mycolors <- sample(cols2(length(unique(plot_melt$UserName))))
ggplot(plot_melt, aes(x = variable, y = value)) +
geom_boxplot(outlier.shape = NA) +
scale_x_discrete(labels = c("1", "2", "3", "4", "5")) +
geom_jitter(width = 0.2, shape = 21, size = 3, fill = "light grey", alpha = 0.9) +
#geom_jitter(aes(fill = UserName), width = 0.2,shape = 21, size = 2) +
#scale_fill_manual(values = mycolors) +
geom_hline(yintercept = 0.05, linetype = 2, color = "darkgrey") +
theme_classic() +
xlab(label = "Number of days combined") +
ylab(label = "Monte-carlo p-value")
ggplot(plot_melt, aes(x = variable, y = value)) +
geom_boxplot(outlier.shape = NA) +
scale_x_discrete(labels = c("1", "2", "3", "4", "5")) +
geom_line(aes(group = UserName), color = "grey", alpha = 0.5) +
geom_point(width = 0.2, shape = 21, size = 3, fill = "light grey", alpha = 0.9) +
#geom_point(aes(fill = UserName), width = 0.2,shape = 21, size = 2) +
#scale_fill_manual(values = mycolors) +
geom_hline(yintercept = 0.05, linetype = 2, color = "darkgrey") +
theme_classic() +
xlab(label = "Number of days combined") +
ylab(label = "Monte-carlo p-value")
plot <- plot[order(plot$`day3Monte Carlo p-value`),]     # reorder by variable of choice
plot$UserName <- factor(plot$UserName, levels = plot$UserName)
plot_new <- plot %>% select(UserName,
`day1Monte Carlo p-value`,
`day3Monte Carlo p-value`)
plot_melt <- melt(plot_new)
plot_melt <- na.omit(plot_melt)
# Make scatterplot of best v. 1 day, ordered by best
ggplot(plot_melt, aes(x = UserName, y = log(value), group = variable)) +
geom_point(aes(color = variable), size = 3) +
geom_point(shape = 1, size =3, color = "black") +
scale_color_manual(values = c("#a6dba0", "#7b3294"), labels=c("1 day","3 day")) +
#scale_color_manual(values = brewer.pal(5, "Dark2")) +
geom_hline(yintercept = log(0.05), linetype = 2, color = "darkgrey") +
theme_bw() +
theme(axis.text.x = element_text(size = 4),
legend.position = c(0.88,0.13),
legend.title = element_blank())+
xlab(label = "Subject") +
ylab(label = "log(Monte Carlo p-value)") +
annotate("text", label = "p = 0.05", size = 3, x = 29, y = log(0.04))
sum(map_username$`day1Monte Carlo p-value`<=0.05, na.rm = T)
day1 <- read.table("figures/figure 4/procrustes/results_username_clr_1day/totals.txt", comment = "#", header = F, sep = "\t")
colnames(day1) <- c("FP1","FP2","Num included dimensions", "day1Monte Carlo p-value", "Count better", "M^2")
day1$UserName <- gsub("\\_.*", "", day1$FP1)
day1 <- day1 %>% select(UserName, `day1Monte Carlo p-value`)
map_username <- full_join(map_username, day1)
day2 <- read.table("figures/figure 4/procrustes/results_username_clr_2day/totals.txt", comment = "#", header = F, sep = "\t")
colnames(day2) <- c("FP1","FP2","Num included dimensions", "day2Monte Carlo p-value", "Count better", "M^2")
day2$UserName <- gsub("\\_.*", "", day2$FP1)
day2 <- day2 %>% select(UserName, `day2Monte Carlo p-value`)
map_username <- full_join(map_username, day2)
day3 <- read.table("figures/figure 4/procrustes/results_username_clr_3day/totals.txt", comment = "#", header = F, sep = "\t")
colnames(day3) <- c("FP1","FP2","Num included dimensions", "day3Monte Carlo p-value", "Count better", "M^2")
day3$UserName <- gsub("\\_.*", "", day3$FP1)
day3 <- day3 %>% select(UserName, `day3Monte Carlo p-value`)
day3$`day3Monte Carlo p-value` <- ifelse(day3$`day3Monte Carlo p-value` == 1, NA, day3$`day3Monte Carlo p-value`)
map_username <- full_join(map_username, day3)
day4 <- read.table("figures/figure 4/procrustes/results_username_clr_4day/totals.txt", comment = "#", header = F, sep = "\t")
colnames(day4) <- c("FP1","FP2","Num included dimensions", "day4Monte Carlo p-value", "Count better", "M^2")
day4$UserName <- gsub("\\_.*", "", day4$FP1)
day4 <- day4 %>% select(UserName, `day4Monte Carlo p-value`)
day4$`day4Monte Carlo p-value` <- ifelse(day4$`day4Monte Carlo p-value` == 1, NA, day4$`day4Monte Carlo p-value`)
map_username <- full_join(map_username, day4)
day5 <- read.table("figures/figure 4/procrustes/results_username_clr_5day/totals.txt", comment = "#", header = F, sep = "\t")
colnames(day5) <- c("FP1","FP2","Num included dimensions", "day5Monte Carlo p-value", "Count better", "M^2")
day5$UserName <- gsub("\\_.*", "", day5$FP1)
day5 <- day5 %>% select(UserName, `day5Monte Carlo p-value`)
day5$`day5Monte Carlo p-value` <- ifelse(day5$`day5Monte Carlo p-value` == 1, NA, day5$`day5Monte Carlo p-value`)
map_username <- full_join(map_username, day5)
map_username <- map_username[!map_username$Study.Status == "Dropped",]
sum(map_username$`day1Monte Carlo p-value`<=0.05, na.rm = T)
sum(map_username$`day2Monte Carlo p-value`<=0.05, na.rm = T)
sum(map_username$`day3Monte Carlo p-value`<=0.05, na.rm = T)
sum(map_username$`day4Monte Carlo p-value`<=0.05, na.rm = T)
sum(map_username$`day5Monte Carlo p-value`<=0.05, na.rm = T)
sum(is.na(map_username$`day1Monte Carlo p-value`<=0.05))
sum(is.na(map_username$`day2Monte Carlo p-value`<=0.05))
sum(is.na(map_username$`day3Monte Carlo p-value`<=0.05))
sum(is.na(map_username$`day4Monte Carlo p-value`<=0.05))
sum(is.na(map_username$`day5Monte Carlo p-value`<=0.05))
mean(map_username$`day1Monte Carlo p-value`, na.rm = T)
mean(map_username$`day2Monte Carlo p-value`, na.rm = T)
mean(map_username$`day3Monte Carlo p-value`, na.rm = T)
mean(map_username$`day4Monte Carlo p-value`, na.rm = T)
mean(map_username$`day5Monte Carlo p-value`, na.rm = T)
sum(map_username$`day1Monte Carlo p-value`<0.05, na.rm = T)
sum(map_username$`day2Monte Carlo p-value`<0.05, na.rm = T)
sum(map_username$`day3Monte Carlo p-value`<0.05, na.rm = T)
sum(map_username$`day4Monte Carlo p-value`<0.05, na.rm = T)
sum(map_username$`day5Monte Carlo p-value`<0.05, na.rm = T)
sum(is.na(map_username$`day1Monte Carlo p-value`<=0.05))
sum(is.na(map_username$`day2Monte Carlo p-value`<=0.05))
sum(is.na(map_username$`day3Monte Carlo p-value`<=0.05))
sum(is.na(map_username$`day4Monte Carlo p-value`<=0.05))
sum(is.na(map_username$`day5Monte Carlo p-value`<=0.05))
mean(map_username$`day1Monte Carlo p-value`, na.rm = T)
mean(map_username$`day2Monte Carlo p-value`, na.rm = T)
mean(map_username$`day3Monte Carlo p-value`, na.rm = T)
mean(map_username$`day4Monte Carlo p-value`, na.rm = T)
mean(map_username$`day5Monte Carlo p-value`, na.rm = T)
sum(map_username$`day1Monte Carlo p-value`<0.05, na.rm = T)
sum(map_username$`day1Monte Carlo p-value`<0.05, na.rm = T)/34
sum(map_username$`day2Monte Carlo p-value`<0.05, na.rm = T)/34
sum(map_username$`day3Monte Carlo p-value`<0.05, na.rm = T)/34
sum(map_username$`day4Monte Carlo p-value`<0.05, na.rm = T)/34
sum(map_username$`day5Monte Carlo p-value`<0.05, na.rm = T)/34
sum(map_username$`day1Monte Carlo p-value`<0.05, na.rm = T)/34
require(rmarkdown)
require(knitr)
require(tidyverse)
require(stringr)
require(dplyr)
require(reshape2)
require(zoo)
require(RColorBrewer)
opts_knit$set(root.dir = "/Users/abby/Documents/Projects/dietstudy/")
opts_chunk$set(echo = TRUE, fig.path = "Figs/", dev = c("png", "pdf"), dpi = 300)
require(rmarkdown)
require(knitr)
require(tidyverse)
require(stringr)
require(dplyr)
require(reshape2)
require(zoo)
require(RColorBrewer)
opts_knit$set(root.dir = "/Users/abby/Documents/Projects/dietstudy/")
opts_chunk$set(echo = TRUE, fig.path = "Figs/", dev = c("png", "pdf"), dpi = 300)
require(rmarkdown)
require(knitr)
require(tidyverse)
require(stringr)
require(dplyr)
require(reshape2)
require(zoo)
require(RColorBrewer)
opts_knit$set(root.dir = "/Users/abby/Documents/Projects/dietstudy/")
opts_chunk$set(echo = TRUE, fig.path = "Figs/", dev = c("png", "pdf"), dpi = 300)
map_sample <- read.table("data/maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
map_username <- read.table("data/maps/UserName_map.txt", sep = "\t", header = T, comment = "")
map_sample$StudyDate <- as.Date.factor(map_sample$StudyDate, format = "%m/%d/%y")
require(rmarkdown)
require(knitr)
require(tidyverse)
require(stringr)
require(dplyr)
require(reshape2)
require(zoo)
require(RColorBrewer)
opts_knit$set(root.dir = "/Users/abby/Documents/Projects/dietstudy/")
opts_chunk$set(echo = TRUE, fig.path = "Figs/", dev = c("png", "pdf"), dpi = 300)
map_sample <- read.table("data/maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
map_username <- read.table("data/maps/UserName_map.txt", sep = "\t", header = T, comment = "")
map_sample$StudyDate <- as.Date.factor(map_sample$StudyDate, format = "%m/%d/%y")
day1 <- read.table("figures/figure 4/procrustes/results_username_offset_1/totals.txt", comment = "#", header = F, sep = "\t")
day1 <- read.table("/figures/figure 4/procrustes/results_username_offset_1/totals.txt", comment = "#", header = F, sep = "\t")
day1 <- read.table("figures/figure 4/procrustes/results_username_offset_1day/totals.txt", comment = "#", header = F, sep = "\t")
colnames(day1) <- c("FP1","FP2","Num included dimensions", "day1Monte Carlo p-value", "Count better", "M^2")
day1$UserName <- gsub("\\_.*", "", day1$FP1)
day1 <- day1 %>% select(UserName, `day1Monte Carlo p-value`)
map_username <- full_join(map_username, day1)
day2 <- read.table("figures/figure 4/procrustes/results_username_offset_2day/totals.txt", comment = "#", header = F, sep = "\t")
colnames(day2) <- c("FP1","FP2","Num included dimensions", "day2Monte Carlo p-value", "Count better", "M^2")
day2$UserName <- gsub("\\_.*", "", day2$FP1)
day2 <- day2 %>% select(UserName, `day2Monte Carlo p-value`)
map_username <- full_join(map_username, day2)
plot <- map_username
colnames(plot)[1] <- "UserName"
plot$UserName <- gsub("MCTs", "", plot$UserName)         # remove MCTs from naming
plot <- plot[order(plot$`day1Monte Carlo p-value`),]     # reorder by variable of choice
plot$UserName <- factor(plot$UserName, levels = plot$UserName)
plot <- map_username
colnames(plot)[1] <- "UserName"
plot$UserName <- gsub("MCTs", "", plot$UserName)         # remove MCTs from naming
plot <- plot[order(plot$`day1Monte Carlo p-value`),]     # reorder by variable of choice
plot$UserName <- factor(plot$UserName, levels = plot$UserName)
plot <- map_username
colnames(plot)[1] <- "UserName"
plot$UserName <- gsub("MCTs", "", plot$UserName)         # remove MCTs from naming
plot <- plot[order(plot$`day1Monte Carlo p-value`),]     # reorder by variable of choice
#plot$UserName <- factor(plot$UserName, levels = plot$UserName)
plot <- plot %>% select(UserName,
`day1Monte Carlo p-value`,
`day2Monte Carlo p-value`)
#,
#`day3Monte Carlo p-value`,
#`day4Monte Carlo p-value`,
#`day5Monte Carlo p-value`)
plot_melt <- melt(plot)
plot_melt <- na.omit(plot_melt)
cols <- brewer.pal(8, "Accent")
cols2 <- colorRampPalette(cols)
mycolors <- sample(cols2(length(unique(plot_melt$UserName))))
ggplot(plot_melt, aes(x = variable, y = value)) +
geom_boxplot(outlier.shape = NA) +
scale_x_discrete(labels = c("1", "2", "3", "4", "5")) +
geom_jitter(aes(fill = UserName), width = 0.2,shape = 21, size = 2) +
scale_fill_manual(values = mycolors) +
geom_hline(yintercept = 0.05, linetype = 2, color = "darkgrey") +
theme_classic() +
xlab(label = "Offset Diet") +
ylab(label = "Monte-carlo p-value")
ggplot(plot_melt, aes(x = variable, y = value)) +
geom_boxplot(outlier.shape = NA) +
scale_x_discrete(labels = c("1", "2", "3", "4", "5")) +
geom_line(aes(group = UserName), color = "grey") +
geom_point(aes(fill = UserName), width = 0.2,shape = 21, size = 2) +
scale_fill_manual(values = mycolors) +
geom_hline(yintercept = 0.05, linetype = 2, color = "darkgrey") +
theme_classic() +
xlab(label = "Diet offset (days)") +
ylab(label = "Monte-carlo p-value")
plot <- plot[order(plot$`day2Monte Carlo p-value`),]     # reorder by variable of choice
plot$UserName <- factor(plot$UserName, levels = plot$UserName)
plot <- plot[order(plot$`day2Monte Carlo p-value`),]     # reorder by variable of choice
#plot$UserName <- factor(plot$UserName, levels = plot$UserName)
plot <- plot %>% select(UserName,
`day2Monte Carlo p-value`,
`day3Monte Carlo p-value`)
plot <- plot[order(plot$`day2Monte Carlo p-value`),]     # reorder by variable of choice
#plot$UserName <- factor(plot$UserName, levels = plot$UserName)
plot <- plot %>% select(UserName,
`day2Monte Carlo p-value`,
#`day3Monte Carlo p-value`)
plot_melt <- melt(plot)
plot_melt <- na.omit(plot_melt)
require(rmarkdown)
require(knitr)
require(tidyverse)
require(stringr)
require(dplyr)
require(reshape2)
require(zoo)
require(RColorBrewer)
opts_knit$set(root.dir = "/Users/abby/Documents/Projects/dietstudy/")
opts_chunk$set(echo = TRUE, fig.path = "Figs/", dev = c("png", "pdf"), dpi = 300)
map_sample <- read.table("data/maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
map_username <- read.table("data/maps/UserName_map.txt", sep = "\t", header = T, comment = "")
map_sample$StudyDate <- as.Date.factor(map_sample$StudyDate, format = "%m/%d/%y")
day1 <- read.table("figures/figure 4/procrustes/results_username_offset_1day/totals.txt", comment = "#", header = F, sep = "\t")
colnames(day1) <- c("FP1","FP2","Num included dimensions", "day1Monte Carlo p-value", "Count better", "M^2")
day1$UserName <- gsub("\\_.*", "", day1$FP1)
day1 <- day1 %>% select(UserName, `day1Monte Carlo p-value`)
map_username <- full_join(map_username, day1)
day2 <- read.table("figures/figure 4/procrustes/results_username_offset_2day/totals.txt", comment = "#", header = F, sep = "\t")
colnames(day2) <- c("FP1","FP2","Num included dimensions", "day2Monte Carlo p-value", "Count better", "M^2")
day2$UserName <- gsub("\\_.*", "", day2$FP1)
day2 <- day2 %>% select(UserName, `day2Monte Carlo p-value`)
map_username <- full_join(map_username, day2)
day3 <- read.table("figures/figure 4/procrustes/results_username_offset_3day/totals.txt", comment = "#", header = F, sep = "\t")
colnames(day3) <- c("FP1","FP2","Num included dimensions", "day3Monte Carlo p-value", "Count better", "M^2")
day3$UserName <- gsub("\\_.*", "", day3$FP1)
day3 <- day3 %>% select(UserName, `day3Monte Carlo p-value`)
map_username <- full_join(map_username, day3)
day4 <- read.table("figures/figure 4/procrustes/results_username_offset_4day/totals.txt", comment = "#", header = F, sep = "\t")
colnames(day4) <- c("FP1","FP2","Num included dimensions", "day4Monte Carlo p-value", "Count better", "M^2")
day4$UserName <- gsub("\\_.*", "", day4$FP1)
day4 <- day4 %>% select(UserName, `day4Monte Carlo p-value`)
map_username <- full_join(map_username, day4)
day5 <- read.table("figures/figure 4/procrustes/results_username_offset_5day/totals.txt", comment = "#", header = F, sep = "\t")
colnames(day5) <- c("FP1","FP2","Num included dimensions", "day5Monte Carlo p-value", "Count better", "M^2")
day5$UserName <- gsub("\\_.*", "", day5$FP1)
day5 <- day5 %>% select(UserName, `day5Monte Carlo p-value`)
map_username <- full_join(map_username, day5)
plot <- map_username
colnames(plot)[1] <- "UserName"
plot$UserName <- gsub("MCTs", "", plot$UserName)         # remove MCTs from naming
plot <- plot[order(plot$`day1Monte Carlo p-value`),]     # reorder by variable of choice
plot$UserName <- factor(plot$UserName, levels = plot$UserName)
require(rmarkdown)
require(knitr)
require(tidyverse)
require(stringr)
require(dplyr)
require(reshape2)
require(zoo)
require(RColorBrewer)
opts_knit$set(root.dir = "/Users/abby/Documents/Projects/dietstudy/")
opts_chunk$set(echo = TRUE, fig.path = "Figs/", dev = c("png", "pdf"), dpi = 300)
map_sample <- read.table("data/maps/SampleID_map.txt", sep = "\t", header = T, comment = "")
map_username <- read.table("data/maps/UserName_map.txt", sep = "\t", header = T, comment = "")
map_sample$StudyDate <- as.Date.factor(map_sample$StudyDate, format = "%m/%d/%y")
day1 <- read.table("figures/figure 4/procrustes/results_username_offset_1day/totals.txt", comment = "#", header = F, sep = "\t")
colnames(day1) <- c("FP1","FP2","Num included dimensions", "day1Monte Carlo p-value", "Count better", "M^2")
day1$UserName <- gsub("\\_.*", "", day1$FP1)
day1 <- day1 %>% select(UserName, `day1Monte Carlo p-value`)
map_username <- full_join(map_username, day1)
day2 <- read.table("figures/figure 4/procrustes/results_username_offset_2day/totals.txt", comment = "#", header = F, sep = "\t")
colnames(day2) <- c("FP1","FP2","Num included dimensions", "day2Monte Carlo p-value", "Count better", "M^2")
day2$UserName <- gsub("\\_.*", "", day2$FP1)
day2 <- day2 %>% select(UserName, `day2Monte Carlo p-value`)
map_username <- full_join(map_username, day2)
day3 <- read.table("figures/figure 4/procrustes/results_username_offset_3day/totals.txt", comment = "#", header = F, sep = "\t")
colnames(day3) <- c("FP1","FP2","Num included dimensions", "day3Monte Carlo p-value", "Count better", "M^2")
day3$UserName <- gsub("\\_.*", "", day3$FP1)
day3 <- day3 %>% select(UserName, `day3Monte Carlo p-value`)
map_username <- full_join(map_username, day3)
day4 <- read.table("figures/figure 4/procrustes/results_username_offset_4day/totals.txt", comment = "#", header = F, sep = "\t")
colnames(day4) <- c("FP1","FP2","Num included dimensions", "day4Monte Carlo p-value", "Count better", "M^2")
day4$UserName <- gsub("\\_.*", "", day4$FP1)
day4 <- day4 %>% select(UserName, `day4Monte Carlo p-value`)
map_username <- full_join(map_username, day4)
day5 <- read.table("figures/figure 4/procrustes/results_username_offset_5day/totals.txt", comment = "#", header = F, sep = "\t")
colnames(day5) <- c("FP1","FP2","Num included dimensions", "day5Monte Carlo p-value", "Count better", "M^2")
day5$UserName <- gsub("\\_.*", "", day5$FP1)
day5 <- day5 %>% select(UserName, `day5Monte Carlo p-value`)
map_username <- full_join(map_username, day5)
plot <- map_username
View(plot)
#colnames(plot)[1] <- "UserName"
plot$UserName <- gsub("MCTs", "", plot$UserName)         # remove MCTs from naming
View(plot)
plot <- plot[order(plot$`day1Monte Carlo p-value`),]     # reorder by variable of choice
plot$UserName <- factor(plot$UserName, levels = plot$UserName)
View(plot)
plot <- map_username
#colnames(plot)[1] <- "UserName"
plot$UserName <- gsub("MCTs", "", plot$UserName)         # remove MCTs from naming
plot <- plot[order(plot$`day1Monte Carlo p-value`),]     # reorder by variable of choice
#plot$UserName <- factor(plot$UserName, levels = plot$UserName)
plot <- plot %>% select(UserName,
`day1Monte Carlo p-value`,
`day2Monte Carlo p-value`,
`day3Monte Carlo p-value`,
`day4Monte Carlo p-value`,
`day5Monte Carlo p-value`)
plot_melt <- melt(plot)
plot_melt <- na.omit(plot_melt)
cols <- brewer.pal(8, "Accent")
cols2 <- colorRampPalette(cols)
mycolors <- sample(cols2(length(unique(plot_melt$UserName))))
ggplot(plot_melt, aes(x = variable, y = value)) +
geom_boxplot(outlier.shape = NA) +
scale_x_discrete(labels = c("1", "2", "3", "4", "5")) +
geom_jitter(aes(fill = UserName), width = 0.2,shape = 21, fill="light grey", size = 2) +
#scale_fill_manual(values = mycolors) +
geom_hline(yintercept = 0.05, linetype = 2, color = "darkgrey") +
theme_classic() +
xlab(label = "Offset Diet") +
ylab(label = "Monte-carlo p-value")
ggplot(plot_melt, aes(x = variable, y = value)) +
geom_boxplot(outlier.shape = NA) +
scale_x_discrete(labels = c("1", "2", "3", "4", "5")) +
geom_line(aes(group = UserName), color = "grey") +
geom_point(aes(fill = UserName), width = 0.2,shape = 21, fill = "light grey", size = 2) +
#scale_fill_manual(values = mycolors) +
geom_hline(yintercept = 0.05, linetype = 2, color = "darkgrey") +
theme_classic() +
xlab(label = "Diet offset (days)") +
ylab(label = "Monte-carlo p-value")
plot <- plot[order(plot$`day2Monte Carlo p-value`),]     # reorder by variable of choice
#plot$UserName <- factor(plot$UserName, levels = plot$UserName)
plot <- plot %>% select(UserName,
`day2Monte Carlo p-value`,
`day3Monte Carlo p-value`)
plot_melt <- melt(plot)
plot_melt <- na.omit(plot_melt)
# Make scatterplot of best v. 1 day, ordered by best
ggplot(plot_melt, aes(x = UserName, y = log(value), group = variable)) +
geom_point(aes(color = variable), size = 3) +
geom_point(shape = 1, size =3, color = "black") +
scale_color_manual(values = brewer.pal(2, "Dark2"), labels=c("2 day","3 day")) +
#scale_color_manual(values = brewer.pal(5, "Dark2")) +
geom_hline(yintercept = log(0.05), linetype = 2, color = "darkgrey") +
theme_bw() +
theme(axis.text.x = element_text(size = 4),
legend.position = c(0.88,0.13),
legend.title = element_blank())+
xlab(label = "Subject") +
ylab(label = "log(Monte Carlo p-value)") +
annotate("text", label = "p = 0.05", size = 3, x = 29, y = log(0.04))
?wilcox.test()
?corr()
?cor()
