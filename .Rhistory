# person B index
possible.b <- 1:length(dat)
possible.b <- possible.b[possible.b != a]
b <- sample(possible.b,1)
# get the species names
today.species <- paste0(species, ".x")
tomorrow.species <- paste0(species, ".y")
# create empty list for storing values
own.diet.predictions <- NULL
others.diet.predictions <- NULL
own.microbiome.predictions <- NULL
scramble.diet.predictions <- NULL
for (i in seq_along(tomorrow.species)) {
tomorrow <- tomorrow.species[i]
today <- today.species[i]
mb.features <- c("Mb.Axis.1","Mb.Axis.2", "Mb.Axis.3", "Mb.Axis.4", "Mb.Axis.5")
dt.features <- c("Dt.Axis.1","Dt.Axis.2", "Dt.Axis.3", "Dt.Axis.4", "Dt.Axis.5")
# predict person A's microbiome from microbiome alone
# species tomorrow from today's species and microbiome mbA.feats
# predict tomorrow
mbA.feats <- dat[[a]][,mb.features]
actual.tomorrow <- dat[[a]][,tomorrow]
mb.only.model <- lm(actual.tomorrow ~., mbA.feats)
pred.tomorrow <- predict(mb.only.model)
#pred.tomorrow <- dat[[a]][,today]  ###TODO: test this to see if it's about the same as the regression result
# compare predicted values to actual values for microbiome only
own.microbiome <- cor(pred.tomorrow, actual.tomorrow)
# get residuals between predicted species tomorrow and actual species tomorrow
resid.tomorrow <- pred.tomorrow - actual.tomorrow
# regress the residuals on diet
dtA.feats <- dat[[a]][,dt.features]
dt.mb.model <- lm(resid.tomorrow ~., dtA.feats)
pred.resid <- predict(dt.mb.model)
# subtract predicted residuals (dt.mb.model) from yhat
# and correlate with acutal value for tomorrow
own.diet <- cor(pred.tomorrow - pred.resid, actual.tomorrow)
# model the residuals from scrambled diet features
# scramble the diet features
scramble.dtA.feats <- dtA.feats[sample(nrow(dtA.feats)),]
scrambe.modelA <- lm(resid.tomorrow~.,scramble.dtA.feats)
# now predict using the model for residuals trained on normal diet
# but pass in scrambled diet features
pred.scramble.resid <- predict(scrambe.modelA, dtA.feats)
# determine the correlation
scramble.diet <- cor(pred.tomorrow - pred.scramble.resid, actual.tomorrow)
##
# predict from person B
# predict person B's species from B microbiome alone
mbB.feats <- dat[[b]][,mb.features]
actual.tomorrowB <- dat[[b]][,tomorrow]
mb.only.modelB <- lm(actual.tomorrowB ~., mbB.feats)
pred.tomorrowB <- predict(mb.only.modelB)
#pred.tomorrowB <- dat[[b]][,today]
# get residuals for B
resid.tomorrowB <- pred.tomorrowB - actual.tomorrowB
#run predict on the model trained with the data from person A
#but passing in the diet data for person B
#to get the externally-predicted residuals
dtB.feats <- dat[[b]][,dt.features]
pred.resid.from.dtB <- predict(dt.mb.model, dtB.feats)
#subtract yr.B.hat from yhat.B and correlate the final result with y.B.
others.diet <- cor(pred.tomorrowB - pred.resid.from.dtB, actual.tomorrowB)
# store variables
own.diet.predictions[[tomorrow]] <- own.diet
others.diet.predictions[[tomorrow]] <- others.diet
own.microbiome.predictions[[tomorrow]] <- own.microbiome
scramble.diet.predictions[[tomorrow]] <- scramble.diet
}
Master.own.diet[[k]] <- own.diet.predictions
Master.others.diet[[k]] <- others.diet.predictions
Master.own.microbiome[[k]] <- own.microbiome.predictions
Master.scramble.diet[[k]] <- scramble.diet.predictions
}
return(list(Master.own.diet = Master.own.diet,
Master.others.diet = Master.others.diet,
Master.own.microbiome = Master.own.microbiome,
Master.scramble.diet = Master.scramble.diet))
}
save(myresults, file ='data/original.prediction.results.Rdata')
myresults <- test.diet.impact()
################### TEST DIET IMPACT ###########
load(file = "data/test_personal_diet_dat.Rdata")
load(file = "data/species.to.test.Rdata")
species <- keepspecies
"test.diet.impact" <- function(){
set.seed(42)
Master.own.diet <- NULL
Master.others.diet <- NULL
Master.own.microbiome <- NULL
Master.scramble.diet <- NULL
for (k in 1:length(dat)) {
# person A index
a <- k
# person B index
possible.b <- 1:length(dat)
possible.b <- possible.b[possible.b != a]
b <- sample(possible.b,1)
# get the species names
today.species <- paste0(species, ".x")
tomorrow.species <- paste0(species, ".y")
# create empty list for storing values
own.diet.predictions <- NULL
others.diet.predictions <- NULL
own.microbiome.predictions <- NULL
scramble.diet.predictions <- NULL
for (i in seq_along(tomorrow.species)) {
tomorrow <- tomorrow.species[i]
today <- today.species[i]
mb.features <- c("Mb.Axis.1","Mb.Axis.2", "Mb.Axis.3", "Mb.Axis.4", "Mb.Axis.5")
dt.features <- c("Dt.Axis.1","Dt.Axis.2", "Dt.Axis.3", "Dt.Axis.4", "Dt.Axis.5")
# predict person A's microbiome from microbiome alone
# species tomorrow from today's species and microbiome mbA.feats
# predict tomorrow
mbA.feats <- dat[[a]][,mb.features]
actual.tomorrow <- dat[[a]][,tomorrow]
mb.only.model <- lm(actual.tomorrow ~., mbA.feats)
pred.tomorrow <- predict(mb.only.model)
#pred.tomorrow <- dat[[a]][,today]  ###TODO: test this to see if it's about the same as the regression result
# compare predicted values to actual values for microbiome only
own.microbiome <- cor(pred.tomorrow, actual.tomorrow)
# get residuals between predicted species tomorrow and actual species tomorrow
resid.tomorrow <- pred.tomorrow - actual.tomorrow
# regress the residuals on diet
dtA.feats <- dat[[a]][,dt.features]
dt.mb.model <- lm(resid.tomorrow ~., dtA.feats)
pred.resid <- predict(dt.mb.model)
# subtract predicted residuals (dt.mb.model) from yhat
# and correlate with acutal value for tomorrow
own.diet <- cor(pred.tomorrow - pred.resid, actual.tomorrow)
# model the residuals from scrambled diet features
# scramble the diet features
scramble.dtA.feats <- dtA.feats[sample(nrow(dtA.feats)),]
scrambe.modelA <- lm(resid.tomorrow~.,scramble.dtA.feats)
# now predict using the model for residuals trained on normal diet
# but pass in scrambled diet features
pred.scramble.resid <- predict(scrambe.modelA, dtA.feats)
# determine the correlation
scramble.diet <- cor(pred.tomorrow - pred.scramble.resid, actual.tomorrow)
##
# predict from person B
# predict person B's species from B microbiome alone
mbB.feats <- dat[[b]][,mb.features]
actual.tomorrowB <- dat[[b]][,tomorrow]
mb.only.modelB <- lm(actual.tomorrowB ~., mbB.feats)
pred.tomorrowB <- predict(mb.only.modelB)
#pred.tomorrowB <- dat[[b]][,today]
# get residuals for B
resid.tomorrowB <- pred.tomorrowB - actual.tomorrowB
#run predict on the model trained with the data from person B
#but passing in the diet data for person A
#to get the externally-predicted residuals
dtB.feats <- dat[[b]][,dt.features]
dt.mb.modelB <- lm(resid.tomorrowB~.,dtB.feats)
pred.residB.from.dtA <- predict(dt.mb.modelB, dtA.feats)
#subtract yr.B.hat from yhat.B and correlate the final result with y.B.
others.diet <- cor(pred.tomorrowB - pred.residB.from.dtA, actual.tomorrowB)
# store variables
own.diet.predictions[[tomorrow]] <- own.diet
others.diet.predictions[[tomorrow]] <- others.diet
own.microbiome.predictions[[tomorrow]] <- own.microbiome
scramble.diet.predictions[[tomorrow]] <- scramble.diet
}
Master.own.diet[[k]] <- own.diet.predictions
Master.others.diet[[k]] <- others.diet.predictions
Master.own.microbiome[[k]] <- own.microbiome.predictions
Master.scramble.diet[[k]] <- scramble.diet.predictions
}
return(list(Master.own.diet = Master.own.diet,
Master.others.diet = Master.others.diet,
Master.own.microbiome = Master.own.microbiome,
Master.scramble.diet = Master.scramble.diet))
}
myresults <- test.diet.impact()
setwd(dir = "/Users/abby/Documents/Projects/dietstudy_analyses/")
require(ape)
require(tidyverse)
################### TEST DIET IMPACT ###########
load(file = "data/test_personal_diet_dat.Rdata")
load(file = "data/species.to.test.Rdata")
species <- keepspecies
"test.diet.impact" <- function(){
set.seed(42)
Master.own.diet <- NULL
Master.others.diet <- NULL
Master.own.microbiome <- NULL
Master.scramble.diet <- NULL
for (n in 1:length(dat)) {
a <- names(dat[n])
lengtha <- dim(dat[[a]])[1]
#person B index
possible.b <- names(dat)
possible.b <- possible.b[possible.b != a]
alllength <- lapply(dat,function(x) dim(x)[1])
alllength <- alllength[possible.b]
samplefrom <- possible.b[which(alllength <= lengtha)]
b <- sample(samplefrom,1)
# get the species names
today.species <- paste0(species, ".x")
tomorrow.species <- paste0(species, ".y")
# create empty list for storing values
own.diet.predictions <- NULL
others.diet.predictions <- NULL
own.microbiome.predictions <- NULL
scramble.diet.predictions <- NULL
for (i in seq_along(tomorrow.species)) {
tomorrow <- tomorrow.species[i]
today <- today.species[i]
mb.features <- c("Mb.Axis.1","Mb.Axis.2", "Mb.Axis.3", "Mb.Axis.4", "Mb.Axis.5")
dt.features <- c("Dt.Axis.1","Dt.Axis.2", "Dt.Axis.3", "Dt.Axis.4", "Dt.Axis.5")
# predict person A's microbiome from microbiome alone
# species tomorrow from today's species and microbiome mbA.feats
# predict tomorrow
mbA.feats <- dat[[a]][,mb.features]
actual.tomorrow <- dat[[a]][,tomorrow]
mb.only.model <- lm(actual.tomorrow ~., mbA.feats)
pred.tomorrow <- predict(mb.only.model)
#pred.tomorrow <- dat[[a]][,today]  ###TODO: test this to see if it's about the same as the regression result
# compare predicted values to actual values for microbiome only
own.microbiome <- cor(pred.tomorrow, actual.tomorrow)
# get residuals between predicted species tomorrow and actual species tomorrow
resid.tomorrow <- pred.tomorrow - actual.tomorrow
# regress the residuals on diet
dtA.feats <- dat[[a]][,dt.features]
dt.mb.model <- lm(resid.tomorrow ~., dtA.feats)
pred.resid <- predict(dt.mb.model)
# subtract predicted residuals (dt.mb.model) from yhat
# and correlate with acutal value for tomorrow
own.diet <- cor(pred.tomorrow - pred.resid, actual.tomorrow)
# model the residuals from scrambled diet features
# scramble the diet features
scramble.dtA.feats <- dtA.feats[sample(nrow(dtA.feats)),]
scrambe.modelA <- lm(resid.tomorrow~.,scramble.dtA.feats)
# now predict using the model for residuals trained on normal diet
# but pass in scrambled diet features
pred.scramble.resid <- predict(scrambe.modelA, dtA.feats)
# determine the correlation
scramble.diet <- cor(pred.tomorrow - pred.scramble.resid, actual.tomorrow)
##
# predict from person B
# predict person B's species from B microbiome alone
mbB.feats <- dat[[b]][,mb.features]
actual.tomorrowB <- dat[[b]][,tomorrow]
mb.only.modelB <- lm(actual.tomorrowB ~., mbB.feats)
pred.tomorrowB <- predict(mb.only.modelB)
#pred.tomorrowB <- dat[[b]][,today]
# get residuals for B
resid.tomorrowB <- pred.tomorrowB - actual.tomorrowB
#run predict on the model trained with the data from person B
#but passing in the diet data for person A
#to get the externally-predicted residuals
dtB.feats <- dat[[b]][,dt.features]
dt.mb.modelB <- lm(resid.tomorrowB~.,dtB.feats)
pred.residB.from.dtA <- predict(dt.mb.modelB, dtA.feats)
#subtract yr.B.hat from yhat.B and correlate the final result with y.B.
others.diet <- cor(pred.tomorrowB - pred.residB.from.dtA, actual.tomorrowB)
# store variables
own.diet.predictions[[tomorrow]] <- own.diet
others.diet.predictions[[tomorrow]] <- others.diet
own.microbiome.predictions[[tomorrow]] <- own.microbiome
scramble.diet.predictions[[tomorrow]] <- scramble.diet
}
Master.own.diet[[n]] <- own.diet.predictions
Master.others.diet[[n]] <- others.diet.predictions
Master.own.microbiome[[n]] <- own.microbiome.predictions
Master.scramble.diet[[n]] <- scramble.diet.predictions
}
return(list(Master.own.diet = Master.own.diet,
Master.others.diet = Master.others.diet,
Master.own.microbiome = Master.own.microbiome,
Master.scramble.diet = Master.scramble.diet))
}
myresults <- test.diet.impact()
for (n in 1:length(dat)) {
a <- names(dat[n])
lengtha <- dim(dat[[a]])[1]
#person B index
possible.b <- names(dat)
possible.b <- possible.b[possible.b != a]
alllength <- lapply(dat,function(x) dim(x)[1])
alllength <- alllength[possible.b]
samplefrom <- possible.b[which(alllength >= lengtha)]
b <- sample(samplefrom,1)
# get the species names
today.species <- paste0(species, ".x")
tomorrow.species <- paste0(species, ".y")
# create empty list for storing values
own.diet.predictions <- NULL
others.diet.predictions <- NULL
own.microbiome.predictions <- NULL
scramble.diet.predictions <- NULL
for (i in seq_along(tomorrow.species)) {
tomorrow <- tomorrow.species[i]
today <- today.species[i]
mb.features <- c("Mb.Axis.1","Mb.Axis.2", "Mb.Axis.3", "Mb.Axis.4", "Mb.Axis.5")
dt.features <- c("Dt.Axis.1","Dt.Axis.2", "Dt.Axis.3", "Dt.Axis.4", "Dt.Axis.5")
# predict person A's microbiome from microbiome alone
# species tomorrow from today's species and microbiome mbA.feats
# predict tomorrow
mbA.feats <- dat[[a]][,mb.features]
actual.tomorrow <- dat[[a]][,tomorrow]
mb.only.model <- lm(actual.tomorrow ~., mbA.feats)
pred.tomorrow <- predict(mb.only.model)
#pred.tomorrow <- dat[[a]][,today]  ###TODO: test this to see if it's about the same as the regression result
# compare predicted values to actual values for microbiome only
own.microbiome <- cor(pred.tomorrow, actual.tomorrow)
# get residuals between predicted species tomorrow and actual species tomorrow
resid.tomorrow <- pred.tomorrow - actual.tomorrow
# regress the residuals on diet
dtA.feats <- dat[[a]][,dt.features]
dt.mb.model <- lm(resid.tomorrow ~., dtA.feats)
pred.resid <- predict(dt.mb.model)
# subtract predicted residuals (dt.mb.model) from yhat
# and correlate with acutal value for tomorrow
own.diet <- cor(pred.tomorrow - pred.resid, actual.tomorrow)
# model the residuals from scrambled diet features
# scramble the diet features
scramble.dtA.feats <- dtA.feats[sample(nrow(dtA.feats)),]
scrambe.modelA <- lm(resid.tomorrow~.,scramble.dtA.feats)
# now predict using the model for residuals trained on normal diet
# but pass in scrambled diet features
pred.scramble.resid <- predict(scrambe.modelA, dtA.feats)
# determine the correlation
scramble.diet <- cor(pred.tomorrow - pred.scramble.resid, actual.tomorrow)
##
# predict from person B
# predict person B's species from B microbiome alone
mbB.feats <- dat[[b]][,mb.features]
actual.tomorrowB <- dat[[b]][,tomorrow]
mb.only.modelB <- lm(actual.tomorrowB ~., mbB.feats)
pred.tomorrowB <- predict(mb.only.modelB)
#pred.tomorrowB <- dat[[b]][,today]
# get residuals for B
resid.tomorrowB <- pred.tomorrowB - actual.tomorrowB
#run predict on the model trained with the data from person B
#but passing in the diet data for person A
#to get the externally-predicted residuals
dtB.feats <- dat[[b]][,dt.features]
dt.mb.modelB <- lm(resid.tomorrowB~.,dtB.feats)
pred.residB.from.dtA <- predict(dt.mb.modelB, dtA.feats)
#subtract yr.B.hat from yhat.B and correlate the final result with y.B.
others.diet <- cor(pred.tomorrowB - pred.residB.from.dtA, actual.tomorrowB)
# store variables
own.diet.predictions[[tomorrow]] <- own.diet
others.diet.predictions[[tomorrow]] <- others.diet
own.microbiome.predictions[[tomorrow]] <- own.microbiome
scramble.diet.predictions[[tomorrow]] <- scramble.diet
}
Master.own.diet[[n]] <- own.diet.predictions
Master.others.diet[[n]] <- others.diet.predictions
Master.own.microbiome[[n]] <- own.microbiome.predictions
Master.scramble.diet[[n]] <- scramble.diet.predictions
}
################### TEST DIET IMPACT ###########
load(file = "data/test_personal_diet_dat.Rdata")
load(file = "data/species.to.test.Rdata")
species <- keepspecies
"test.diet.impact" <- function(){
set.seed(42)
Master.own.diet <- NULL
Master.others.diet <- NULL
Master.own.microbiome <- NULL
Master.scramble.diet <- NULL
for (n in 1:length(dat)) {
a <- names(dat[n])
lengtha <- dim(dat[[a]])[1]
#person B index
possible.b <- names(dat)
possible.b <- possible.b[possible.b != a]
alllength <- lapply(dat,function(x) dim(x)[1])
alllength <- alllength[possible.b]
samplefrom <- possible.b[which(alllength >= lengtha)]
b <- sample(samplefrom,1)
# get the species names
today.species <- paste0(species, ".x")
tomorrow.species <- paste0(species, ".y")
# create empty list for storing values
own.diet.predictions <- NULL
others.diet.predictions <- NULL
own.microbiome.predictions <- NULL
scramble.diet.predictions <- NULL
for (i in seq_along(tomorrow.species)) {
tomorrow <- tomorrow.species[i]
today <- today.species[i]
mb.features <- c("Mb.Axis.1","Mb.Axis.2", "Mb.Axis.3", "Mb.Axis.4", "Mb.Axis.5")
dt.features <- c("Dt.Axis.1","Dt.Axis.2", "Dt.Axis.3", "Dt.Axis.4", "Dt.Axis.5")
# predict person A's microbiome from microbiome alone
# species tomorrow from today's species and microbiome mbA.feats
# predict tomorrow
mbA.feats <- dat[[a]][,mb.features]
actual.tomorrow <- dat[[a]][,tomorrow]
mb.only.model <- lm(actual.tomorrow ~., mbA.feats)
pred.tomorrow <- predict(mb.only.model)
#pred.tomorrow <- dat[[a]][,today]  ###TODO: test this to see if it's about the same as the regression result
# compare predicted values to actual values for microbiome only
own.microbiome <- cor(pred.tomorrow, actual.tomorrow)
# get residuals between predicted species tomorrow and actual species tomorrow
resid.tomorrow <- pred.tomorrow - actual.tomorrow
# regress the residuals on diet
dtA.feats <- dat[[a]][,dt.features]
dt.mb.model <- lm(resid.tomorrow ~., dtA.feats)
pred.resid <- predict(dt.mb.model)
# subtract predicted residuals (dt.mb.model) from yhat
# and correlate with acutal value for tomorrow
own.diet <- cor(pred.tomorrow - pred.resid, actual.tomorrow)
# model the residuals from scrambled diet features
# scramble the diet features
scramble.dtA.feats <- dtA.feats[sample(nrow(dtA.feats)),]
scrambe.modelA <- lm(resid.tomorrow~.,scramble.dtA.feats)
# now predict using the model for residuals trained on normal diet
# but pass in scrambled diet features
pred.scramble.resid <- predict(scrambe.modelA, dtA.feats)
# determine the correlation
scramble.diet <- cor(pred.tomorrow - pred.scramble.resid, actual.tomorrow)
##
# predict from person B
# predict person B's species from B microbiome alone
mbB.feats <- dat[[b]][,mb.features]
actual.tomorrowB <- dat[[b]][,tomorrow]
mb.only.modelB <- lm(actual.tomorrowB ~., mbB.feats)
pred.tomorrowB <- predict(mb.only.modelB)
#pred.tomorrowB <- dat[[b]][,today]
# get residuals for B
resid.tomorrowB <- pred.tomorrowB - actual.tomorrowB
#run predict on the model trained with the data from person B
#but passing in the diet data for person A
#to get the externally-predicted residuals
dtB.feats <- dat[[b]][,dt.features]
dt.mb.modelB <- lm(resid.tomorrowB~.,dtB.feats)
pred.residB.from.dtA <- predict(dt.mb.modelB, dtA.feats)
#subtract yr.B.hat from yhat.B and correlate the final result with y.B.
others.diet <- cor(pred.tomorrowB - pred.residB.from.dtA, actual.tomorrowB)
# store variables
own.diet.predictions[[tomorrow]] <- own.diet
others.diet.predictions[[tomorrow]] <- others.diet
own.microbiome.predictions[[tomorrow]] <- own.microbiome
scramble.diet.predictions[[tomorrow]] <- scramble.diet
}
Master.own.diet[[n]] <- own.diet.predictions
Master.others.diet[[n]] <- others.diet.predictions
Master.own.microbiome[[n]] <- own.microbiome.predictions
Master.scramble.diet[[n]] <- scramble.diet.predictions
}
return(list(Master.own.diet = Master.own.diet,
Master.others.diet = Master.others.diet,
Master.own.microbiome = Master.own.microbiome,
Master.scramble.diet = Master.scramble.diet))
}
myresults <- test.diet.impact()
save(myresults, file ='data/original.prediction.results.Rdata')
setwd("~/Documents/Projects/dietstudy_analyses/")
# plot predictions results
load(file = "data/original.prediction.results.Rdata")
load(file = "data/species.to.test.Rdata")
load(file = "data/test_personal_diet_dat.Rdata")
species <- keepspecies
mynames <- gsub("MCTs", "", names(dat))
own.diet <- data.frame(matrix(unlist(myresults$Master.own.diet), nrow = length(species), byrow = F))
rownames(own.diet) <- species
colnames(own.diet) <- mynames
others.diet <- data.frame(matrix(unlist(myresults$Master.others.diet), nrow = length(species), byrow = F))
rownames(others.diet) <- species
colnames(others.diet) <- mynames
own.microbiome <- data.frame(matrix(unlist(myresults$Master.own.microbiome), nrow = length(species), byrow = F))
rownames(own.microbiome) <- species
colnames(own.microbiome) <- mynames
scramble.diet <- data.frame(matrix(unlist(myresults$Master.scramble.diet), nrow = length(species), byrow = F))
rownames(scramble.diet) <- species
colnames(scramble.diet) <- mynames
# format for ggplot to make plots
require(ggplot2)
require(reshape2)
own.diet.melt <- rownames_to_column(own.diet, var = "Taxa")
own.diet.melt <- melt(own.diet.melt, id.vars = "Taxa", variable.name = "UserName", value.name = "own.diet.corr")
others.diet.melt <- rownames_to_column(others.diet, var = "Taxa")
others.diet.melt <- melt(others.diet.melt, id.vars = "Taxa", variable.name = "UserName", value.name = "others.diet.corr")
own.microbiome.melt <-rownames_to_column(own.microbiome, var = "Taxa")
own.microbiome.melt <- melt(own.microbiome.melt, id.vars = "Taxa", variable.name = "UserName", value.name = "own.mb.corr")
scramble.diet.melt <- rownames_to_column(scramble.diet, var = "Taxa")
scramble.diet.melt <- melt(scramble.diet.melt, id.vars = "Taxa", variable.name = "UserName", value.name = "scramble.diet.corr")
master.df <- merge(own.diet.melt,others.diet.melt)
master.df <- merge(own.microbiome.melt, master.df)
master.df <- merge(scramble.diet.melt, master.df)
master.df.melt <- melt(master.df, id.vars = c("Taxa", "UserName"))
require(agricolae)
#Tukey
hsd=HSD.test(aov(value~variable,data=master.df.melt), "variable", group=T)
# get summary stats for plotting error bars
summary.master <- aggregate(master.df.melt$value, by = list(master.df.melt$variable), FUN = "mean")
colnames(summary.master) <- c("variable", "mean")
summary.sd <- aggregate(master.df.melt$value, by = list(master.df.melt$variable), FUN = "sd")
colnames(summary.sd) <- c("variable", "sd")
summary.master <- merge(summary.master, summary.sd)
summary.master$se <- summary.master$sd/sqrt(length(mynames)) # se is sd/sqrt(n)
summary.master <- merge(summary.master, as.data.frame(hsd$groups), by.x = "mean", by.y = "value")
summary.master
master.df.melt$variable <- factor(master.df.melt$variable, levels = c("own.diet.corr", "own.mb.corr", "scramble.diet.corr", "others.diet.corr"))
# make the plot
mybarplot <- ggplot(data = master.df.melt, aes(x = variable, y = value)) +
geom_bar(stat = "summary", fun.y = mean, aes(fill = as.factor(variable)), show.legend = F) +
scale_x_discrete(labels = c( "Diet +\nmicrobiome", "Microbiome\nonly", "Shuffled diet\n+ microbiome", "Microbiome\n+ another\nsubject's diet")) +
scale_fill_manual(values = c("#5a2071","#5f86b7", "#bb7ad2","#64baaa")) +
geom_errorbar(data = summary.master, aes(x = variable, ymin = mean - se, ymax = mean + se), width = 0.4, inherit.aes = F) +
theme_classic() +
ylab("Prediction accuracy\n(Pearson correlation of species abundance)") +
xlab("Model training set") +
theme(axis.text = element_text(size = 7),
axis.title = element_text(size = 7),
axis.text.x = element_text(size = 5))
# pring the plot
mybarplot
ggsave("output/Figure4/Figure4C.pdf", mybarplot, height = 2.5, width = 2.5, device = "pdf")
ggsave("output/Figure5/Figure5B.pdf", mybarplot, height = 2.5, width = 2.5, device = "pdf")
